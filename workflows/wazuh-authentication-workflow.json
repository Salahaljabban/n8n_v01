{
  "name": "Wazuh Authentication",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "bridge-auth",
        "options": {}
      },
      "id": "e6da5917-6cb1-419f-b96c-5e8ace8aa54e",
      "name": "Auth Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        288,
        272
      ],
      "webhookId": "bridge-auth"
    },
    {
      "parameters": {
        "jsCode": "// Validate authentication request; fallback to environment variables\nconst req = $input.first().json || {};\nconst body = req.body || req || {};\n\nconst username = body.username || $env.WAZUH_API_USER || 'wazuh';\nconst password = body.password || $env.WAZUH_API_PASSWORD;\nconst baseUrl  = ($env.WAZUH_API_URL || 'https://172.20.18.14:55000').replace(/\\/$/, '');\n\nif (!password) {\n  return { success: false, status: 400, error: 'Missing credentials: set WAZUH_API_PASSWORD or provide password in request body' };\n}\n\nreturn {\n  success: true,\n  username,\n  password,\n  wazuh_url: baseUrl + '/security/user/authenticate',\n  timestamp: new Date().toISOString()\n};"
      },
      "id": "45b1eccf-85b3-43d9-a436-15bf13013244",
      "name": "Validate Auth Request",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        512,
        272
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $json.wazuh_url }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "username",
              "value": "={{ $json.username }}"
            },
            {
              "name": "password",
              "value": "={{ $json.password }}"
            }
          ]
        },
        "options": {
          "allowUnauthorizedCerts": true,
          "timeout": 30000
        }
      },
      "id": "67d5afff-f0b9-46c5-a53c-f5f2b6d1ed1e",
      "name": "Wazuh Auth Request",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        736,
        272
      ],
      "credentials": {
        "httpBasicAuth": {
          "id": "8Cc3P9EWCNkZvPOC",
          "name": "WAZUH_API"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Process authentication response (JSON first, raw fallback)\nconst input = $input.first();\nconst body  = input.json;\nconst baseUrl  = ($env.WAZUH_API_URL || 'https://172.20.18.14:55000').replace(/\\/$/, '');\n\nlet token = body?.data?.token;\nif (!token && typeof body === 'string') token = body.trim();\nif (!token && body?.token) token = String(body.token).trim();\n\nif (token && token.length > 20) {\n  return {\n    success: true,\n    message: 'Authenticated with Wazuh API',\n    wazuh_server: baseUrl,\n    authenticated_at: new Date().toISOString(),\n    token\n  };\n}\n\nreturn {\n  success: false,\n  status: 401,\n  error: 'Authentication failed - no valid token received',\n  wazuh_server: baseUrl,\n  attempted_at: new Date().toISOString(),\n  response_preview: typeof body === 'object' ? JSON.stringify(body).slice(0, 300) : String(body).slice(0, 300)\n};"
      },
      "id": "50e382dd-e2fb-4716-bd87-1b0e90482601",
      "name": "Process Auth Response",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        960,
        272
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $json }}",
        "options": {
          "responseCode": "={{ $json.success ? 200 : ($json.status || 401) }}",
          "responseHeaders": {
            "entries": [
              {
                "name": "Cache-Control",
                "value": "no-store"
              }
            ]
          }
        }
      },
      "id": "e7c6d6da-40cd-478d-904f-d2f3ec4c19a6",
      "name": "Auth Webhook Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        1168,
        272
      ]
    }
  ],
  "pinData": {},
  "connections": {
    "Auth Webhook Trigger": {
      "main": [
        [
          {
            "node": "Validate Auth Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validate Auth Request": {
      "main": [
        [
          {
            "node": "Wazuh Auth Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wazuh Auth Request": {
      "main": [
        [
          {
            "node": "Process Auth Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Auth Response": {
      "main": [
        [
          {
            "node": "Auth Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "timezone": "UTC"
  },
  "versionId": "c3197e15-d0de-49b1-b453-39602e58481c",
  "meta": {
    "instanceId": "cf43939745564fea323e56207dbc9830b417d9049a75545776753b8e177cb4e9"
  },
  "id": "kiBSPL6xSjd5hiCg",
  "tags": []
}