{
  "name": "Wazuh Authentication",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "bridge-auth",
        "responseMode": "onReceived",
        "options": {}
      },
      "id": "auth-webhook-trigger",
      "name": "Auth Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300],
      "webhookId": "bridge-auth"
    },
    {
      "parameters": {
        "jsCode": "// Validate authentication request; fallback to environment variables\nconst req = $input.first().json;\nconst body = req.body || {};\n\nconst username = body.username || $env.WAZUH_API_USER;\nconst password = body.password || $env.WAZUH_API_PASSWORD;\nconst wazuhUrl = ($env.WAZUH_API_URL || 'https://172.20.18.14:55000') + '/security/user/authenticate';\n\nif (!username || !password) {\n  return { error: 'Missing credentials: set WAZUH_API_USER/PASSWORD', status: 400 }\n}\n\nreturn {\n  username,\n  password,\n  wazuh_url: wazuhUrl,\n  timestamp: new Date().toISOString()\n};"
      },
      "id": "validate-auth-request",
      "name": "Validate Auth Request",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [460, 300]
    },
    {
      "parameters": {
        "url": "={{ ($env.WAZUH_API_URL || 'https://172.20.18.14:55000') + '/security/user/authenticate?raw=true' }}",
        "authentication": "none",
        "requestMethod": "POST",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Authorization",
              "value": "={{ 'Basic ' + $base64(($env.WAZUH_API_USER || 'wazuh') + ':' + ($env.WAZUH_API_PASSWORD || '')) }}"
            }
          ]
        },
        "sendBody": false,
        "options": {
          "timeout": 30000,
          "retry": {
            "enabled": true,
            "maxRetries": 3,
            "retryInterval": 1000
          },
          "allowUnauthorizedCerts": true
        }
      },
      "id": "wazuh-auth-request",
      "name": "Wazuh Auth Request",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [680, 300]
    },
    {
      "parameters": {
        "jsCode": "// Process authentication response\nconst input = $input.first();\nconst wazuhServer = $env.WAZUH_API_URL || 'https://172.20.18.14:55000';\n\n// The response should be a raw JWT token string\nlet token = '';\nif (input.json && typeof input.json === 'string') {\n  token = input.json.trim();\n} else if (input.binary && input.binary.data) {\n  token = input.binary.data.toString().trim();\n} else {\n  token = String(input.json || '').trim();\n}\n\nif (token && token.length > 50) {\n  return {\n    success: true,\n    message: 'Successfully authenticated with Wazuh API using raw token',\n    wazuh_server: wazuhServer,\n    authenticated_at: new Date().toISOString(),\n    token: token\n  };\n} else {\n  return {\n    success: false,\n    error: 'Authentication failed - no valid token received',\n    wazuh_server: wazuhServer,\n    attempted_at: new Date().toISOString(),\n    response: input\n  };\n}"
      },
      "id": "process-auth-response",
      "name": "Process Auth Response",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 300]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $json }}"
      },
      "id": "auth-webhook-response",
      "name": "Auth Webhook Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1120, 300]
    }
  ],
  "connections": {
    "Auth Webhook Trigger": {
      "main": [
        [
          {
            "node": "Validate Auth Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validate Auth Request": {
      "main": [
        [
          {
            "node": "Wazuh Auth Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wazuh Auth Request": {
      "main": [
        [
          {
            "node": "Process Auth Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Auth Response": {
      "main": [
        [
          {
            "node": "Auth Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "timezone": "UTC",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner"
  },
  "versionId": "1",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "id": "wazuh-authentication-workflow",
  "tags": [
    {
      "createdAt": "2025-01-21T18:00:00.000Z",
      "updatedAt": "2025-01-21T18:00:00.000Z",
      "id": "wazuh-integration",
      "name": "Wazuh Integration"
    },
    {
      "createdAt": "2025-01-21T18:00:00.000Z",
      "updatedAt": "2025-01-21T18:00:00.000Z",
      "id": "authentication",
      "name": "Authentication"
    }
  ]
}