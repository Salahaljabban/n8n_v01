{
  "name": "Wazuh Health Monitoring",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes"
            }
          ]
        }
      },
      "id": "59f66292-931e-4487-ae8b-b0d4a4296391",
      "name": "Health Check Schedule",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [
        -736,
        -64
      ]
    },
    {
      "parameters": {
        "jsCode": "// Initialize health check session\nconst checkId = `health-${Date.now()}`;\nconst timestamp = new Date().toISOString();\n\nconsole.log(`Starting Wazuh API health check: ${checkId}`);\n\nreturn {\n  check_id: checkId,\n  start_time: timestamp,\n  wazuh_server: ($env.WAZUH_API_URL || 'https://172.20.18.14:55000').replace('https://','').replace(/\\/$/, ''),\n  check_type: 'scheduled_health_monitoring'\n};"
      },
      "id": "f1131519-c2d1-4702-bb3f-c0772ecc3c4b",
      "name": "Initialize Health Check",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -448,
        -112
      ]
    },
    {
      "parameters": {
        "url": "={{ ($env.WAZUH_API_URL || 'https://172.20.18.14:55000') + '/security/user/authenticate' }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "username",
              "value": "wazuh"
            },
            {
              "name": "password",
              "value": "MDymLhH.E?RZFtuUVV2KMW01X3b99y69"
            }
          ]
        },
        "options": {
          "allowUnauthorizedCerts": true,
          "timeout": 20000
        }
      },
      "id": "fadfa4f3-ddba-4620-bb9d-768a8968558c",
      "name": "Get Wazuh Token",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -160,
        -112
      ],
      "credentials": {
        "httpBasicAuth": {
          "id": "8Cc3P9EWCNkZvPOC",
          "name": "WAZUH_API"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ ($env.WAZUH_API_URL || 'https://172.20.18.14:55000') + '/cluster/status' }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "={{ 'Bearer ' + $node[\"Get Wazuh Token\"].json[\"data\"][\"token\"] }}"
            },
            {
              "name": "User-Agent",
              "value": "n8n-health-monitor/1.0"
            }
          ]
        },
        "options": {
          "allowUnauthorizedCerts": true,
          "timeout": 10000
        }
      },
      "id": "aa42f20b-3db8-48c1-8a03-3ff021553819",
      "name": "Wazuh Cluster Status",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        80,
        -240
      ],
      "alwaysOutputData": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "={{ ($env.WAZUH_API_URL || 'https://172.20.18.14:55000') + '/manager/status' }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "={{ 'Bearer ' + $node[\"Get Wazuh Token\"].json[\"data\"][\"token\"] }}"
            },
            {
              "name": "User-Agent",
              "value": "n8n-health-monitor/1.0"
            }
          ]
        },
        "options": {
          "allowUnauthorizedCerts": true,
          "timeout": 15000
        }
      },
      "id": "7efd3efb-4803-4ac7-abce-165c4ed21ba7",
      "name": "Check Wazuh Connectivity",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        80,
        0
      ],
      "alwaysOutputData": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "mode": "wait",
        "options": {}
      },
      "id": "67819b22-7627-4beb-bf9e-7da02f8385bb",
      "name": "Wait for Health Checks",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        336,
        -128
      ]
    },
    {
      "parameters": {
        "jsCode": "// Process health check results safely\nconst safeJson = (name) => { try { return $(name).first().json || null; } catch { return null; } };\n\nconst initData    = safeJson('Initialize Health Check') || {};\nconst clusterResp = safeJson('Wazuh Cluster Status');     // /cluster/status\nconst mgrStatus   = safeJson('Check Wazuh Connectivity'); // /manager/status\n\nconst endTime = new Date().toISOString();\nconst startTs = initData.start_time ? new Date(initData.start_time).getTime() : Date.now();\nconst responseTime = Date.now() - startTs;\n\nconst clusterData = clusterResp?.data || null; // { status: 'running' | ... }\nconst managerData = mgrStatus?.data || null;   // { status: 'running' | ... }\n\nconst apiAccessible = !!clusterResp || !!mgrStatus;\n\nconst wazuhHealth = {\n  status: clusterData?.status || (apiAccessible ? 'unknown' : 'unreachable'),\n  api_accessible: apiAccessible,\n  response_time_ms: responseTime,\n};\n\nconst managerStatus = {\n  status: managerData?.status || 'unknown',\n  version: null,\n  compilation_date: null,\n  api_response_time: responseTime,\n};\n\nlet overallStatus = 'healthy';\nconst issues = [];\n\nif (!apiAccessible) {\n  overallStatus = 'critical';\n  issues.push('Wazuh API is not accessible');\n}\n\nif ((managerStatus.status || 'unknown') !== 'running') {\n  overallStatus = overallStatus === 'critical' ? 'critical' : 'degraded';\n  issues.push('Wazuh manager is not running');\n}\n\nif (responseTime > 5000) {\n  if (overallStatus === 'healthy') overallStatus = 'warning';\n  issues.push('Slow API response time detected');\n}\n\nif (issues.length > 2) {\n  overallStatus = 'critical';\n}\n\nconst out = {\n  check_id: initData.check_id || `health-${Date.now()}`,\n  start_time: initData.start_time || new Date(Date.now() - responseTime).toISOString(),\n  timestamp: endTime,\n  wazuh_server: initData.wazuh_server || '172.20.18.14:55000',\n  check_type: initData.check_type || 'scheduled_health_monitoring',\n  overall_status: overallStatus,\n  wazuh_health: wazuhHealth,\n  manager_status: managerStatus,\n  cluster_status: {\n    status: clusterData?.status || 'unknown',\n    running: clusterData?.status === 'running' ? 'yes' : 'no',\n    enabled: true\n  },\n  issues,\n  requires_attention: overallStatus !== 'healthy',\n  check_duration_ms: responseTime,\n};\n\nreturn [{ json: out }];"
      },
      "id": "973dacdc-4595-48f6-91b7-e31884587233",
      "name": "Analyze Health Results",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        560,
        -128
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "requires-attention",
              "leftValue": "={{ $json.requires_attention }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "true"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "1cb36f38-cb10-469e-a314-41253eeb7148",
      "name": "Check Attention Required",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        768,
        -128
      ]
    },
    {
      "parameters": {
        "jsCode": "// Create alert notification for health issues\nconst healthData = $input.first().json;\n\nconst statusEmoji = { healthy: '✅', warning: '⚠️', degraded: '🔶', critical: '🚨' };\nconst statusColor = { healthy: '#00FF00', warning: '#FFFF00', degraded: '#FFA500', critical: '#FF0000' };\n\nconst slackMessage = {\n  channel: '#infrastructure-alerts',\n  username: 'Wazuh Health Monitor',\n  icon_emoji: ':shield:',\n  attachments: [\n    {\n      color: statusColor[healthData.overall_status],\n      title: `${statusEmoji[healthData.overall_status]} Wazuh API Health Alert - ${healthData.overall_status.toUpperCase()}`,\n      fields: [\n        { title: 'Check ID', value: healthData.check_id, short: true },\n        { title: 'Wazuh Server', value: healthData.wazuh_server, short: true },\n        { title: 'Response Time', value: `${healthData.check_duration_ms}ms`, short: true },\n        { title: 'API Status', value: healthData.wazuh_health.api_accessible ? 'Accessible' : 'Not Accessible', short: true },\n        { title: 'Manager Status', value: healthData.manager_status.status, short: true },\n        { title: 'Cluster Running', value: healthData.cluster_status.running || 'N/A', short: true }\n      ],\n      footer: 'Wazuh Health Monitor',\n      ts: Math.floor(new Date(healthData.timestamp).getTime() / 1000)\n    }\n  ]\n};\n\nif (healthData.issues.length > 0) {\n  slackMessage.attachments[0].fields.push({\n    title: 'Issues Detected',\n    value: healthData.issues.map(i => `• ${i}`).join('\\n'),\n    short: false\n  });\n}\n\nreturn { slack_message: slackMessage, alert_sent: true, health_status: healthData.overall_status };"
      },
      "id": "951ee4af-aeeb-4bdf-a40b-e344e30fcb42",
      "name": "Create Health Alert",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1008,
        -240
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "is-critical",
              "leftValue": "={{ $json.overall_status }}",
              "rightValue": "critical",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "23255314-ca70-4d8c-b2d1-b6e335158a41",
      "name": "Check Critical Status",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1008,
        -32
      ]
    },
    {
      "parameters": {
        "jsCode": "// Attempt automatic remediation for critical issues\nconst healthData = $input.first().json;\n\nconst remediationActions = [];\n\nif (!healthData.wazuh_health.api_accessible) {\n  remediationActions.push({ action: 'check_network_connectivity', reason: 'Wazuh API is not accessible', priority: 'high' });\n}\n\nif (healthData.manager_status.status !== 'running') {\n  remediationActions.push({ action: 'restart_wazuh_manager', reason: 'Wazuh manager is not running', priority: 'high' });\n}\n\nif (healthData.cluster_status.enabled && healthData.cluster_status.running !== 'yes') {\n  remediationActions.push({ action: 'check_cluster_status', reason: 'Cluster is not running properly', priority: 'medium' });\n}\n\nreturn { remediation_required: remediationActions.length > 0, remediation_actions: remediationActions, health_data: healthData, auto_remediation_timestamp: new Date().toISOString() };"
      },
      "id": "8c36c59e-87ca-4ccb-85b1-7451037daec4",
      "name": "Plan Auto Remediation",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1248,
        -32
      ]
    },
    {
      "parameters": {
        "jsCode": "// Log health check results\nconst healthData = $input.first().json;\n\nconst logEntry = {\n  timestamp: healthData.timestamp,\n  check_id: healthData.check_id,\n  overall_status: healthData.overall_status,\n  wazuh_response_time: healthData.check_duration_ms,\n  api_accessible: healthData.wazuh_health.api_accessible,\n  manager_status: healthData.manager_status.status,\n  cluster_running: healthData.cluster_status.running,\n  issues_count: healthData.issues.length,\n  requires_attention: healthData.requires_attention\n};\n\nconsole.log(`Wazuh health check completed: ${healthData.check_id} - Status: ${healthData.overall_status}`);\nif (healthData.issues.length > 0) console.log(`Issues detected: ${healthData.issues.join(', ')}`);\n\nreturn { health_check_complete: true, log_entry: logEntry, next_check_in: '5 minutes' };"
      },
      "id": "526e4881-84ed-4a97-84d0-f70b30c7d7ae",
      "name": "Log Health Results",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1488,
        -128
      ]
    }
  ],
  "pinData": {},
  "connections": {
    "Health Check Schedule": {
      "main": [
        [
          {
            "node": "Initialize Health Check",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Initialize Health Check": {
      "main": [
        [
          {
            "node": "Get Wazuh Token",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Wazuh Token": {
      "main": [
        [
          {
            "node": "Wazuh Cluster Status",
            "type": "main",
            "index": 0
          },
          {
            "node": "Check Wazuh Connectivity",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wazuh Cluster Status": {
      "main": [
        [
          {
            "node": "Wait for Health Checks",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Wazuh Connectivity": {
      "main": [
        [
          {
            "node": "Wait for Health Checks",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Wait for Health Checks": {
      "main": [
        [
          {
            "node": "Analyze Health Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze Health Results": {
      "main": [
        [
          {
            "node": "Check Attention Required",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Attention Required": {
      "main": [
        [
          {
            "node": "Create Health Alert",
            "type": "main",
            "index": 0
          },
          {
            "node": "Check Critical Status",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Log Health Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Health Alert": {
      "main": [
        [
          {
            "node": "Log Health Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Critical Status": {
      "main": [
        [
          {
            "node": "Plan Auto Remediation",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Log Health Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Plan Auto Remediation": {
      "main": [
        [
          {
            "node": "Log Health Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "090f5a35-b0d7-48fa-af73-2dd3fd4c2c3f",
  "meta": {
    "instanceId": "cf43939745564fea323e56207dbc9830b417d9049a75545776753b8e177cb4e9"
  },
  "id": "pgWFPYnUvDcZsRu4",
  "tags": [
    {
      "createdAt": "2025-08-27T20:16:58.855Z",
      "updatedAt": "2025-08-27T20:16:58.855Z",
      "id": "KQzy9JlLWYmlaGzb",
      "name": "Health Monitoring"
    },
    {
      "createdAt": "2025-08-27T20:16:59.036Z",
      "updatedAt": "2025-08-27T20:16:59.036Z",
      "id": "ZcFV07GjtpnU9cAW",
      "name": "Infrastructure"
    },
    {
      "createdAt": "2025-08-27T12:24:24.334Z",
      "updatedAt": "2025-08-27T12:24:24.334Z",
      "id": "zU35DaPTj2ZuF5t9",
      "name": "Wazuh Integration"
    }
  ]
}