{
  "name": "Wazuh Alert Monitoring",
  "nodes": [
    {
      "parameters": {
        "mode": "everyX",
        "value": 5,
        "unit": "minutes"
      },
      "id": "b8414d43-43ef-4c81-84f7-348199e7ccce",
      "name": "Alert Polling Trigger",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [
        -2848,
        112
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ ($env.WAZUH_API_URL || 'https://172.20.18.14:55000').replace(/\\/$/, '') + '/security/user/authenticate' }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "provideSslCertificates": true,
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "username",
              "value": "wazuh"
            },
            {
              "name": "password",
              "value": "MDymLhH.E?RZFtuUVV2KMW01X3b99y69"
            }
          ]
        },
        "options": {
          "allowUnauthorizedCerts": true,
          "timeout": 20000
        }
      },
      "id": "5f1aa686-280a-47a2-a136-64eecff58512",
      "name": "Get Wazuh Token",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -2592,
        112
      ],
      "credentials": {
        "httpBasicAuth": {
          "id": "8Cc3P9EWCNkZvPOC",
          "name": "WAZUH_API"
        },
        "httpSslAuth": {
          "id": "pMoxVfYrKTxHGQY3",
          "name": "SSL Certificates account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "leftValue": "={{ !!$json.data && !!$json.data.token }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "51b3fecc-3645-41d0-933b-28d9269c8880",
      "name": "Token OK?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -2368,
        112
      ]
    },
    {
      "parameters": {
        "url": "={{ ($env.WAZUH_API_URL || 'https://172.20.18.14:55000').replace(/\\/$/, '') + '/manager/status' }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "={{ 'Bearer ' + $node[\"Get Wazuh Token\"].json[\"data\"][\"token\"] }}"
            },
            {
              "name": "User-Agent",
              "value": "n8n-alert-monitor/1.0"
            }
          ]
        },
        "options": {
          "allowUnauthorizedCerts": true,
          "timeout": 12000
        }
      },
      "id": "02e5fdc9-4b51-46ff-a9b9-4212f8169c2d",
      "name": "Wazuh API Health Check",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -2144,
        48
      ]
    },
    {
      "parameters": {
        "jsCode": "// Evaluate health from /manager/status\nconst j = $input.first().json || {};\nconst item = j.data?.affected_items?.[0] || {};\nconst required = ['wazuh-apid','wazuh-db','wazuh-analysisd','wazuh-remoted','wazuh-modulesd','wazuh-syscheckd'];\nconst down = required.filter(k => item[k] !== 'running');\nreturn [{ json: { api_healthy: down.length === 0, down, raw: j } }];"
      },
      "id": "25fe755a-9be5-432e-8afb-ddc8de244412",
      "name": "Evaluate API Health",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1920,
        48
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "leftValue": "={{ $json.api_healthy }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "7b8011fc-6c5a-484d-8226-b60d9fceb6b8",
      "name": "API Healthy?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -1712,
        48
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ ($env.WAZUH_INDEXER_URL || 'https://172.20.18.14:9200').replace(/\\/$/, '') + '/wazuh-alerts-4.x-*/_search' }}",
        "authentication": "none",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            { "name": "Content-Type", "value": "application/json" },
            { "name": "Authorization", "value": "={{ 'Basic ' + Buffer.from(($env.INDEXER_USERNAME || '') + ':' + ($env.INDEXER_PASSWORD || '')).toString('base64') }}" }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "size",
              "value": 100
            },
            {
              "name": "sort",
              "value": [
                {
                  "@timestamp": {
                    "order": "desc"
                  }
                }
              ]
            },
            {
              "name": "query",
              "value": {
                "range": {
                  "@timestamp": {
                    "gte": "now-5m"
                  }
                }
              }
            }
          ]
        },
        "options": {
          "allowUnauthorizedCerts": true,
          "timeout": 45000
        }
      },
      "id": "34609e32-b990-46a9-80cc-85d3fd2b3c89",
      "name": "Fetch Wazuh Alerts",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -1488,
        48
      ],
      "credentials": {}
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "leftValue": "={{ !!$env.WAZUH_INDEXER_URL }}",
              "rightValue": true,
              "operator": { "type": "boolean", "operation": "equals" }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "f0a6c9c0-idxr-guard-0001",
      "name": "Indexer Enabled?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -1600,
        -80
      ]
    },
    {
      "parameters": {
        "jsCode": "// Indexer disabled via env; produce empty result\nreturn [{ json: { alerts_found: false, alert_count: 0, message: 'Indexer disabled', processed_at: new Date().toISOString() } }];"
      },
      "id": "7c5e1a55-skip-indexer-0001",
      "name": "Indexer Disabled",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1360,
        -80
      ]
    },
    {
      "parameters": {
        "jsCode": "// Normalize Indexer results\nconst res = $input.first().json || {};\nconst hits = res.hits?.hits || [];\nif (!hits.length) return [{ json: { alerts_found: false, alert_count: 0, message: 'No alerts' } }];\nconst alerts = hits.map(h => { const s = h._source || {}; const lvl = s.rule?.level; return {\n  alert_id: h._id,\n  timestamp: s['@timestamp'],\n  rule_id: s.rule?.id,\n  rule_level: lvl,\n  rule_description: s.rule?.description,\n  agent_name: s.agent?.name,\n  agent_ip: s.agent?.ip,\n  location: s.location,\n  full_log: s.full_log,\n  severity: lvl >= 10 ? 'high' : lvl >= 7 ? 'medium' : 'low',\n  source: 'wazuh_indexer'\n};});\nreturn [{ json: { alerts_found: true, alert_count: alerts.length, alerts, processed_at: new Date().toISOString() } }];"
      },
      "id": "76d8eff4-3d7e-448c-8411-f2cff34aa202",
      "name": "Process Alerts",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1264,
        48
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "leftValue": "={{ $json.alerts_found }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "63c888ec-b8ef-42c1-8a04-056f7ec550f3",
      "name": "Has Alerts?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -1040,
        48
      ]
    },
    {
      "parameters": {
        "jsCode": "// Fan-out per alert\nconst d = $input.first().json; if (!d.alerts?.length) return []; return d.alerts.map(a => ({ json: a }));"
      },
      "id": "966c3f62-48dc-40b5-b12a-0d16a43a64c8",
      "name": "Split Alerts",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -832,
        -16
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "leftValue": "={{ $json.severity }}",
              "rightValue": "high",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "665dcf20-9a7e-425b-ac4a-aff747175ec9",
      "name": "High Severity?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -608,
        -16
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://n8n:5678/webhook/high-priority-alert",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "alert",
              "value": "={{ $json }}"
            }
          ]
        },
        "options": {
          "timeout": 15000
        }
      },
      "id": "c177c0aa-279d-4193-a3e6-19291bfaa5a7",
      "name": "Trigger High Priority Workflow",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        -384,
        -96
      ]
    },
    {
      "parameters": {
        "jsCode": "const a=$input.first().json; return [{json:{msg:`Standard alert logged: ${a.alert_id}`, alert_id:a.alert_id, severity:a.severity, logged_at:new Date().toISOString()}}];"
      },
      "id": "2a56752e-7c56-43a6-8e89-f8b673b4bae1",
      "name": "Log Standard Alert",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -384,
        80
      ]
    },
    {
      "parameters": {
        "jsCode": "const e=$input.first(); return [{json:{error:true,message:'Token or API health failed',detail:e?.json||e,ts:new Date().toISOString()}}];"
      },
      "id": "7bb0530c-df92-4fea-ba04-4d5f678174f8",
      "name": "Handle API/Error",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2144,
        272
      ]
    }
  ],
  "pinData": {},
  "connections": {
    "Alert Polling Trigger": {
      "main": [
        [
          {
            "node": "Get Wazuh Token",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Wazuh Token": {
      "main": [
        [
          {
            "node": "Token OK?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Token OK?": {
      "main": [
        [
          {
            "node": "Wazuh API Health Check",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Handle API/Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wazuh API Health Check": {
      "main": [
        [
          {
            "node": "Evaluate API Health",
            "type": "main",
            "index": 0
          },
          {
            "node": "Handle API/Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Evaluate API Health": {
      "main": [
        [
          {
            "node": "API Healthy?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "API Healthy?": {
      "main": [
        [
          {
            "node": "Indexer Enabled?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Handle API/Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Indexer Enabled?": {
      "main": [
        [
          {
            "node": "Fetch Wazuh Alerts",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Indexer Disabled",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Indexer Disabled": {
      "main": [
        [
          {
            "node": "Has Alerts?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Wazuh Alerts": {
      "main": [
        [
          {
            "node": "Process Alerts",
            "type": "main",
            "index": 0
          },
          {
            "node": "Handle API/Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Alerts": {
      "main": [
        [
          {
            "node": "Has Alerts?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Has Alerts?": {
      "main": [
        [
          {
            "node": "Split Alerts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Alerts": {
      "main": [
        [
          {
            "node": "High Severity?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "High Severity?": {
      "main": [
        [
          {
            "node": "Trigger High Priority Workflow",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Log Standard Alert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1a6a410f-dfe5-420d-9d75-cf22c74e77cc",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "cf43939745564fea323e56207dbc9830b417d9049a75545776753b8e177cb4e9"
  },
  "id": "zqlId6e2x2kYk8Oj",
  "tags": []
}
